#!/bin/bash
# run_onchange_install-packages.sh.tmpl
# IMPORTANT: this script needs to be idempotent

set -e

echo "Checking and installing extra packages..."
echo

# ==============================================================================
# Package Lists
# ==============================================================================

# Core utilities and tools
PACKAGES=(
    # Terminal emulator
    ghostty

    # Shell
    fish

    # Git extensions
    git-lfs
)

# ==============================================================================
# Installation
# ==============================================================================

install_packages() {
    echo "üì¶ Installing packages..."

    local packages_to_install=()

    # Check which packages are not installed
    for package in "${PACKAGES[@]}"; do
        if ! pacman -Q "$package" &> /dev/null; then
            packages_to_install+=("$package")
        fi
    done

    # Install missing packages
    if [ ${#packages_to_install[@]} -gt 0 ]; then
        echo "	Installing packages: ${packages_to_install[*]}"
        sudo pacman -S --noconfirm --needed "${packages_to_install[@]}"
        echo "	‚úì Packages installed successfully"
    else
        echo "	‚úì All packages are already installed"
    fi
}

install_fisher() {
    echo "üê° Setting up Fisher and fish plugins..."

    # Check if fish is installed
    if ! command -v fish &> /dev/null; then
        echo "	‚ö†Ô∏è  Fish shell is not installed. Skipping Fisher setup."
        return 0
    fi

    # Check if Fisher is already installed
    if fish -c "type -q fisher" &> /dev/null; then
        echo "	‚úì Fisher already installed"
    else
        echo "	‚¨áÔ∏è  Installing Fisher..."
        fish -c "curl -sL https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish | source && fisher install jorgebucaran/fisher" &> /dev/null
        echo "	‚úì Fisher installed successfully"
    fi

    # Install/update plugins from fish_plugins file
    if [ -f ~/.config/fish/fish_plugins ]; then
        echo "	üì¶ Syncing fish plugins..."
        fish -c "fisher update" &> /dev/null
        echo "	‚úì Fish plugins synced successfully"
    fi
}

install_tx02_font() {
    echo "üî§ Installing TX-02 font..."

    # Check if TX-02 font is already installed
    if [[ -f ~/.local/share/fonts/TX-02-Variable.ttf ]]; then
        echo "	‚úì TX-02 font already installed"

        # Set TX-02 as the system font using omarchy if not already set
        if command -v omarchy-font-set &> /dev/null && command -v omarchy-font-current &> /dev/null; then
            current_font=$(omarchy-font-current)
            if [[ "$current_font" != "TX-02-Variable" ]]; then
                echo "	üé® Setting TX-02 as system font..."
                if omarchy-font-set "TX-02-Variable" &> /dev/null; then
                    echo "	‚úì TX-02 set as system font"
                else
                    echo "	‚ö†Ô∏è  Warning: Failed to set TX-02 as system font"
                fi
            fi
        fi

        return 0
    fi

    # Check if 1Password CLI is installed
    if ! command -v op &> /dev/null; then
        echo "	‚ö†Ô∏è  1Password CLI not installed"
        echo "	   Install with: pacman -S 1password-cli"
        echo "	   Skipping font installation"
        return 0
    fi

    # Check if logged in to 1Password
    if ! op account list &> /dev/null; then
        echo "	‚ö†Ô∏è  Not logged in to 1Password"
        echo "	   Login with: eval \$(op signin)"
        echo "	   Skipping font installation"
        return 0
    fi

    # Ensure fonts directory exists
    mkdir -p ~/.local/share/fonts

    # Download TX-02 font from 1Password
    echo "	‚¨áÔ∏è  Downloading TX-02-Variable from 1Password..."
    if op document get "TX-02-Variable" --force -o ~/.local/share/fonts/TX-02-Variable.ttf &> /dev/null; then
        echo "	‚úì Font downloaded successfully"

        # Rebuild font cache (suppress all output)
        fc-cache -f &> /dev/null
        echo "	‚úì Font cache updated"

        # Set TX-02 as the system font using omarchy
        if command -v omarchy-font-set &> /dev/null; then
            echo "	üé® Setting TX-02 as system font..."
            if omarchy-font-set "TX-02-Variable" &> /dev/null; then
                echo "	‚úì TX-02 set as system font"
            else
                echo "	‚ö†Ô∏è  Warning: Failed to set TX-02 as system font"
            fi
        fi
    else
        echo "	‚úó Failed to download TX-02 font"
        echo "	   Check that 'TX-02-Variable' document exists in your 1Password vault"
        return 1
    fi
}

# ==============================================================================
# Main execution
# ==============================================================================

install_packages
echo
install_fisher
echo
install_tx02_font

echo
echo "‚úÖ Package installation complete!"
